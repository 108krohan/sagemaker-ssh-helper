image: public.ecr.aws/docker/library/python:3.8

stages:
  - test

run_tests:
  stage: test
  resource_group: ssh-helper-tests
  script:
    - cat /etc/hosts
    # Creating venv
    - python -m venv ./venv
    - source ./venv/bin/activate
    # Install the package
    - pip freeze --all | tee pip_freeze_before.txt
    - pip install '.'
    - pip check
    - pip freeze --all | tee pip_freeze_after.txt
    - pip install '.[cdk,test]'
    - pip check
    - pip freeze --all | tee pip_freeze_after_test.txt
    - '( diff pip_freeze_before.txt pip_freeze_after.txt || : ) | tee pip_freeze_diff.txt'
    - '( diff pip_freeze_after.txt pip_freeze_after_test.txt || : ) | tee pip_freeze_diff_test.txt'
    # Scanning sources
    - bandit -r ./sagemaker_ssh_helper/ ./tests/ *.py --skip B603,B404,B101 2>&1 | tee bandit.txt
    - flake8 --extend-ignore E501,F401,F541,E402 ./sagemaker_ssh_helper/ ./tests/ *.py | tee flake8.txt
    # Configure local env
    - id
    - apt-get update
    - apt-get install -y sudo
    - sm-local-configure
    - source tests/generate_sagemaker_config.sh
    # Update IAM/SSM policies
    - curl -fsSL https://deb.nodesource.com/setup_lts.x | bash -
    - export DEBIAN_FRONTEND=noninteractive
    - apt-get install -y nodejs
    - npm install -g aws-cdk
    - cdk --version
    - REGION=eu-west-1
    - USER_ROLE=$GITLAB_ROLE_ARN
    - APP="python -m sagemaker_ssh_helper.cdk.app"
    # Bootstrapping requires Administrator privileges:
    # cdk bootstrap aws://"$ACCOUNT_ID"/"$REGION" --require-approval never
    - AWS_REGION=$REGION cdk -a "$APP" deploy SSH-IAM-SSM-Stack-Tests 
        --require-approval never -c sagemaker_role=$SAGEMAKER_ROLE -c user_role=$USER_ROLE
    - AWS_REGION=$REGION cdk -a "$APP" deploy SSH-IAM-SSM-Stack
        --require-approval never -c sagemaker_role=$SAGEMAKER_ROLE -c user_role=$USER_ROLE
    - AWS_REGION=$REGION cdk -a "$APP" deploy SSM-Advanced-Tier-Stack
        --require-approval never -c sagemaker_role=$SAGEMAKER_ROLE -c user_role=$USER_ROLE
    - REGION=eu-west-2
    # cdk bootstrap aws://"$ACCOUNT_ID"/"$REGION" --require-approval never
    - AWS_REGION=$REGION cdk -a "$APP" deploy SSM-Advanced-Tier-Stack
        --require-approval never -c sagemaker_role=$SAGEMAKER_ROLE -c user_role=$USER_ROLE
    - unset REGION
    - unset USER_ROLE
    - unset APP
    # Set bucket versioning to detect model repacking / dependencies overrides
    - aws s3api put-bucket-versioning 
        --bucket $(AWS_DEFAULT_REGION=eu-west-1 bash tests/get_sagemaker_bucket.sh) 
        --versioning-configuration Status=Enabled
    - aws s3api put-bucket-versioning 
        --bucket $(AWS_DEFAULT_REGION=eu-west-2 bash tests/get_sagemaker_bucket.sh) 
        --versioning-configuration Status=Enabled
    # Set default region for tests - need both to avoid confusion because one can override another
    - export AWS_REGION=eu-west-1
    - export AWS_DEFAULT_REGION=eu-west-1
    - aws configure list
    # Assume CI/CD role
    - sts=( $(source tests/assume-sagemaker-role.sh) )
    - export AWS_ACCESS_KEY_ID=${sts[0]}
    - export AWS_SECRET_ACCESS_KEY=${sts[1]}
    - export AWS_SESSION_TOKEN=${sts[2]}
    # Run tests
    - echo "Extra args for pytest - $PYTEST_EXTRA_ARGS"
    - cd tests
    - coverage run -m pytest 
        --html=pytest_report.html --self-contained-html --junitxml=pytest_report.xml
        -m 'not manual' 
        -o sagemaker_studio_domain=$SAGEMAKER_STUDIO_DOMAIN
        $PYTEST_EXTRA_ARGS || EXIT_CODE=$?
    - coverage report
    - coverage xml
    - coverage html --show-contexts
    - cd -
    - exit $EXIT_CODE
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    when: always
    reports:
      junit: tests/pytest_report.xml
      coverage_report:
        coverage_format: cobertura
        path: tests/coverage.xml
    paths:
      - pip_freeze_before.txt
      - pip_freeze_after.txt
      - pip_freeze_diff.txt
      - pip_freeze_after_test.txt
      - pip_freeze_diff_test.txt
      - tests/pytest_report.xml
      - tests/pytest_report.html
      - tests/htmlcov/
      - tests/coverage.xml
      - tests/.coverage
      - bandit.txt
      - flake8.txt

profile_tests:
  stage: test
  resource_group: ssh-helper-tests
  script:
    - python -m venv ./venv
    - source ./venv/bin/activate
    - pip install '.[test]'
    - id
    - apt-get update
    - apt-get install -y sudo
    - sm-local-configure
    - source tests/generate_sagemaker_config.sh
    - export DEBIAN_FRONTEND=noninteractive
    - apt-get install -y graphviz
    - export AWS_REGION=eu-west-1
    - export AWS_DEFAULT_REGION=eu-west-1
    - sts=( $(source tests/assume-sagemaker-role.sh) )
    - export AWS_ACCESS_KEY_ID=${sts[0]}
    - export AWS_SECRET_ACCESS_KEY=${sts[1]}
    - export AWS_SESSION_TOKEN=${sts[2]}
    - cd tests
    - pytest
      -m 'not manual'
      -o sagemaker_studio_domain=$SAGEMAKER_STUDIO_DOMAIN
      --profile --profile-svg
      $PYTEST_EXTRA_ARGS
    - cd -
  artifacts:
    when: always
    paths:
      - tests/prof/